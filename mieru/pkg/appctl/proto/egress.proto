// Copyright (C) 2023  mieru authors
//
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program.  If not, see <https://www.gnu.org/licenses/>.

syntax = "proto3";

package appctl;

option go_package = "github.com/enfein/mieru/pkg/appctl/appctlpb";

enum ProxyProtocol {
    UNKNOWN_PROXY_PROTOCOL = 0;
    SOCKS5_PROXY_PROTOCOL = 1;
}

message EgressProxy {
    optional string name = 1;

    optional ProxyProtocol protocol = 2;

    // Proxy IP address or domain name.
    optional string host = 3;

    // Proxy port number.
    optional int32 port = 4;
}

enum EgressAction {
    // Use proxy to connect to the destination.
    PROXY = 0;

    // Directly connect to the destination.
    DIRECT = 1;

    // Do not connect to the destination.
    REJECT = 2;
}

message EgressRule {
    // A list of CIDR to match the rule.
    // Use "*" to match all IP addresses.
    repeated string ipRanges = 1;

    // A list of domain names to match the rule.
    // Use "*" to match all domain names.
    repeated string domainNames = 2;

    // The action to do when the rule is matched.
    optional EgressAction action = 3;

    // The name of proxy to connect.
    // This is required when the action is PROXY.
    optional string proxyName = 4;
}

message Egress {
    // A list of proxies.
    repeated EgressProxy proxies = 1;

    // A list of rules.
    // If no rule is matched, the default action is DIRECT.
    repeated EgressRule rules = 2;
}
